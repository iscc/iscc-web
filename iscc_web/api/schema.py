# generated by datamodel-codegen:
#   filename:  openapi.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field, constr


class MediaID(BaseModel):
    __root__: constr(regex=r"[0-9a-q]+=*", min_length=13, max_length=13) = Field(
        ...,
        description="ID for an uploaded file generated by server for each upload event.",
        example="061k2tvgjkbis",
    )


class UploadResponse(BaseModel):
    url: Optional[str] = Field(None, example="/api/v1/media/061k2tvgjkbis")
    media_id: Optional[MediaID] = None


class Metadata(BaseModel):
    name: Optional[str] = Field(
        None, description="The title or name of creative work.", example="Example Title"
    )
    description: Optional[str] = Field(
        None,
        description="Description of the createive work.",
        example="Example disambiguating description.",
    )
    meta: Optional[str] = Field(
        None,
        description=(
            "Subject, industry, or use-case specific metadata. (Encoded as JSON string or Data-URL)"
        ),
        example="data:application/json;charset=utf-8;base64,eyJleHRlbmRlZCI6Im1ldGFkYXRhIn0=",
    )
