openapi: 3.0.3
info:
  title: ISCC-WEB Generator API
  description: Simple ISCC Generator Service
  version: 0.1.0

servers:
  - url: http://localhost:8000/api/v1

tags:
  - name: media
    description: Endpoints for uploading, downloading and deleting media files.

paths:
  /media:
    post:
      operationId: upload-file
      summary: Upload file
      description: Upload a file for ISCC processing.
      tags:
        - media
      parameters:
        - name: X-Upload-Filename
          in: header
          description: Base64 encoded file name of the uploaded file.
          required: true
          schema:
            type: string
            example: eW91ci1tZWRpYS1maWxlLmpwZw==
      requestBody:
        description: The raw file data (not form encoded)
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        201:
          description: Created
          headers:
            Location:
              description: Root-relative link to created resource
              schema:
                type: string
                format: uri-reference
                example: /api/v1/media/061k2igj91k1i
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadResponse"
        400:
          description: Bad Request
  /media/{media_id}:
    get:
      operationId: download-file
      summary: Download file
      description: Download processed file.
      tags:
        - media
      parameters:
        - name: media_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/MediaID"
      responses:
        200:
          description: Ok
        404:
          description: File not found
    delete:
      operationId: delete-file
      summary: Delete file
      tags:
        - media
      parameters:
        - name: media_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/MediaID"
      responses:
        204:
          description: No Content
        404:
          description: File not found
  /metadata/{media_id}:
    get:
      operationId: extract-metadata
      summary: Extract Metadata
      description: Extract embedded metadata from media file
      tags:
        - metadata
      parameters:
        - name: media_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/MediaID"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metadata"
        404:
          description: Not Found
components:
  schemas:
    MediaID:
      description: ID for an uploaded file generated by server for each upload event.
      type: string
      minLength: 13
      maxLength: 13
      pattern: '[0-9a-q]+=*'
      example: 061k2tvgjkbis
    UploadResponse:
      description: Information required to download the newly created media resource.
      type: object
      properties:
        url:
          type: string
          format: uri-reference
          example: /api/v1/media/061k2tvgjkbis
        media_id:
          $ref: "#/components/schemas/MediaID"
    Metadata:
      description: Metadata for media file embedding.
      type: object
      properties:
        name:
          description: The title or name of creative work.
          type: string
          example: "Example Title"
        description:
          description: Description of the createive work.
          type: string
          example: "Example disambiguating description."
        meta:
          description: Subject, industry, or use-case specific metadata. (Encoded as JSON string or Data-URL)
          type: string
          example: "data:application/json;charset=utf-8;base64,eyJleHRlbmRlZCI6Im1ldGFkYXRhIn0="
