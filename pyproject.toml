[tool.poetry]
name = "iscc-web"
version = "0.1.0"
description = "ISCC - Generator Web Application"
authors = ["Titusz <tp@py7.de>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/iscc/iscc-web"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
blacksheep = "^1.2"
uvicorn = "^0.18"
aiofiles = "^22.1"
iscc_sdk = "*"
httpx = "^0.23.0"
pathvalidate = "^2.5.2"
aiofile = "^3.8.1"

[tool.poetry.scripts]
iscc-web = 'iscc_web.main:main'

[tool.poetry.group.dev.dependencies]
pytest = "^7.1"
black = "^22.8"
poethepoet = "^0.16"
pytest-asyncio = "^0.19.0"
schemathesis = "^3.17.2"
datamodel-code-generator = "^0.13.1"
iscc-samples = "^0.4.0"

[tool.black]
line-length = 100
target-version = ['py38']
preview = true

[tool.datamodel-codegen]
input = "iscc_web/static/docs/openapi.yaml"
output = "iscc_web/api/schema.py"
encoding = "utf-8"
disable-timestamp = true
target-python-version = "3.8"

[tool.poe.tasks]
formatopenapi = { cmd = "poetry run python -m develop.format_openapi", help = "Reformat openapi.yaml"}
codegen = { cmd = "datamodel-codegen", help="Build code from OpenAPI Schema"}
format = { cmd = "poetry run black .", help = "Code style formating with black" }
lf = { cmd = "poetry run python -m develop.lf", help = "Convert line endings to LF" }
test = { cmd = "poetry run pytest", help = "Run tests" }
run = { cmd = "uvicorn iscc_web.asgi:application --reload", help = "Run dev server"}
all = ["formatopenapi", "codegen", "format", "lf", "test"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
